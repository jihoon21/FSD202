[ NCS 서버프로그램구현 - 키워드정리 ]

1. 구현 도구 (종류)
- 프로그램을 개발할 때 가장 많이 사용되는 도ㅜ로서 코드의 작성 및 편집 디버깅 등 과 같은 다양한 작업이 가능하며 이클립스 / 비주얼 스튜디오코드 / 인텔리제이 / 넷빈스 등 다양한 소프트웨어 도구들이 사용되고 있다.

2. 형상관리 도구 (종류)
- 대다수의 프로젝트들은 다수의 개발자들로 구성된 팀 단위 프로젝트로 진행되며, 개발자들이 작성한 소스 및 리소스 등 산출물에 대한 버전 관리를 위해 형상관리 도구가 사용된다 대표적인 형상관리 도구로는 CV5, Subversion, Git등이 있다.

3. 통합 개발 도구 (뜻)
- 목표 시스템 구축을 위한 통합 개발환경의 선정은 풍부한 기능과 플러그인을 보유하고 있고, 다양한 적용 사례가 존재하는 통합 개발 도구(IDE) 를 개발도구로 선전한다

4. 데이터베이스(Database) 서버 (종류)
- MySql, Oracle, Ms-SQL 등 데이터베이스가 설치되는 하드웨어이다

5. JVM(Java Virtual Machine) (뜻)
- Java 관련 응용 프로그램을 기동하기 위한 인터프리터 환경으로, 적용 버전을 개발표준에서 명시하여 모든 개발자가 동일한 버전을 적용하는 것이 좋다.

6. 재사용(Reuse) (뜻)
- 목표 시스템의 개발 시간 및 비용 절감을 위하여 검증된 기능을 파악하고 재구성하여 시스템에 응용하기 위한 최적화 작업이다.
함수화 객체 재사용 / 컴포넌트 재사용 / 애플리케이션 재사용

7. 소프트웨어 모듈 응집도 (뜻)
- 응집도는 모듈 내부에서 구성 요소 간에 밀접한 관계를 맥조 있는 정도로 평가되며, 응집도가 높을수록 필요한 요소들로 구성되어 있고 낮을수록 관린이 적은 요소들로 구성되어 있다.

8. 소프트웨어 프레임워크의 정의
- 1. 효율적인 정보 시스템 개발을 위한 코드 라이브러리, 애플리케이션 인터페이스, 설정 정보 등의 집합으로서 재사용이 가능하도록 소프트웨어 구성에 ㅍㄹ요한 기본 뼈대를 제공한다.

 2. 광의적으로 정보 시스템의 개발 및 운영을 지원하는 도구 및 가이드 등을 포함한다.

9. 프레임워크의 특징
- 모듈화 / 재사용성 / 확장성 / 제어의 역흐름

10. 소프트웨어 테스트의 원칙
- 개발자가 자신이 개발한 프로그램 및 소스코드를 테스팅하지 않는다.
효율적인 결함 제거 법칙 사용(낚시의 법칩, 파레토의 법칙)
->효율적으로 결함을 발견, 가시화, 제거, 예방의 순서로 하여 정량적으로 관리할 수 있어야 한다
완벽한 소프트웨어 테스팅은 불가능하다
테스트는 계획 단계부터 해야 한다.
살충제 패러독스
오류-부재의 궤변